/*
Deployment script for ExamenV2

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ExamenV2"
:setvar DefaultFilePrefix "ExamenV2"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS01\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS01\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Procedure [dbo].[DireccionActualizar]...';


GO
CREATE PROCEDURE dbo.DireccionActualizar
    @IdDireccion INT,
	@IdPersona INT,
	@DireccionExacta VARCHAR(1000),
	@IdCatalogoProvincia INT,
	@IdCatalogoCanton INT,
	@IdCatalogoDistrito INT,
    @Estado BIT
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
	-- AQUI VA EL CODIGO
		
	UPDATE dbo.Direccion SET
	    IdDireccion=@IdDireccion,
	    IdPersona= @IdPersona,
	    DireccionExacta=@DireccionExacta,
		IdCatalogoProvincia=@IdCatalogoProvincia,
		IdCatalogoCanton=@IdCatalogoCanton,
		IdCatalogoDistrito=@IdCatalogoDistrito,
		Estado=@Estado

	WHERE IdDireccion=@IdDireccion

		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[DireccionEliminar]...';


GO
CREATE PROCEDURE [dbo].[DireccionEliminar]
@IdDireccion INT
  
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY

		
	DELETE FROM Dbo.Direccion WHERE IdDireccion=@IdDireccion


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[DireccionInsertar]...';


GO
CREATE PROCEDURE dbo.DireccionInsertar
    @IdPersona INT,
	@DireccionExacta VARCHAR(1000),
	@IdCatalogoProvincia INT,
	@IdCatalogoCanton INT,
	@IdCatalogoDistrito INT,
    @Estado BIT
	
	
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY

		
		INSERT INTO dbo.Direccion 
		(	       
	      IdPersona,
		  DireccionExacta,
		  IdCatalogoProvincia,
		  IdCatalogoCanton,
		  IdCatalogoDistrito,
		  Estado
		)
		VALUES
		(
		
	      @IdPersona,
		  @DireccionExacta,
		  @IdCatalogoProvincia,
		  @IdCatalogoCanton,
		  @IdCatalogoDistrito,
		  @Estado
		)


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[DireccionObtener]...';


GO
CREATE PROCEDURE [dbo].DireccionObtener
@IdDireccion INT=NULL

AS BEGIN
	SET NOCOUNT ON

	SELECT

	        CP.IdCatalogoProvincia
		,	CP.NombreCatalogoProvincia

		,	D.IdDireccion
		,   D.DireccionExacta
		,   D.Estado

		,   CD.IdCatalogoDistrito
		,	CD.NombreCatalogoDistrito
	
		,   CC.IdCatalogoCanton
		,	CC.NombreCatalogoCanton
		

		,   P.IdPersona
		,	P.Nombre
	
				

	FROM dbo.Direccion D
	 INNER JOIN dbo.CatalogoProvincia CP
         ON D.IdCatalogoProvincia = CP.IdCatalogoProvincia
     INNER JOIN dbo.CatalogoCanton CC
         ON D.IdCatalogoCanton = CC.IdCatalogoCanton
	 INNER JOIN dbo.CatalogoDistrito CD
         ON D.IdCatalogoDistrito = CD.IdCatalogoDistrito
	 INNER JOIN dbo.Persona P
         ON D.IdPersona = P.IdPersona
	WHERE
	     (@IdDireccion IS NULL OR IdDireccion=@IdDireccion)

END
GO
PRINT N'Creating Procedure [dbo].[PersonaActualizar]...';


GO
CREATE PROCEDURE dbo.PersonaActualizar
	@IdPersona INT,
	@Cedula varchar(250)	,
	@Nombre varchar(250)	,
	@Primer_Apellido varchar(250),
	@Segundo_Apellido varchar(250),
	@FechaNacimiento DATE,
	@TieneHijos BIT ,
	@Cuantos VARCHAR(1000)= NULL,
	@Estado BIT 
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
	-- AQUI VA EL CODIGO
		
	UPDATE dbo.Persona SET
	 Cedula=@Cedula,
	 Nombre=@Nombre,
	 Primer_Apellido=@Primer_Apellido,
	 Segundo_Apellido=@Segundo_Apellido,
	 FechaNacimiento=@FechaNacimiento,
	 TieneHijos=@TieneHijos,
	 Cuantos=@Cuantos,
	 Estado=@Estado

	WHERE IdPersona=@IdPersona

		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[PersonaEliminar]...';


GO
CREATE PROCEDURE dbo.PersonaEliminar
 @IdPersona INT
  
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
		
	DELETE FROM dbo.Persona WHERE IdPersona=@IdPersona


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[PersonaInsertar]...';


GO
CREATE PROCEDURE dbo.PersonaInsertar
     
	@Cedula varchar(250)	,
	@Nombre varchar(250)	,
	@Primer_Apellido varchar(250),
	@Segundo_Apellido varchar(250),
	@FechaNacimiento DATE,
	@TieneHijos BIT ,
	@Cuantos VARCHAR(1000)= NULL,
	@Estado BIT 
	
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY		
		INSERT INTO dbo.Persona 
		(
	      Cedula
	    , Nombre 
	    , Primer_Apellido
	    , Segundo_Apellido 
	    , FechaNacimiento 
		, TieneHijos
		, Cuantos
		, Estado
		)
		VALUES
		(
		 @Cedula
	    , @Nombre 
	    , @Primer_Apellido
	    , @Segundo_Apellido 
	    , @FechaNacimiento 
		, @TieneHijos
		, @Cuantos
		, @Estado
		)


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[PersonaLista]...';


GO
CREATE PROCEDURE dbo.PersonaLista

AS
	BEGIN
		SET NOCOUNT ON

		SELECT 
		IdPersona,
		Nombre

		FROM	
			dbo.Persona

			WHERE
					Estado=1

	END
GO
PRINT N'Creating Procedure [dbo].[PersonaObtener]...';


GO
CREATE PROCEDURE [dbo].[PersonaObtener]
@IdPersona INT=NULL

AS 
	BEGIN
	SET NOCOUNT ON

	SELECT
			P.IdPersona
		,   P.Cedula
		,   P.Nombre
		,   P.Primer_Apellido
		,   P.Segundo_Apellido
		,   P.FechaNacimiento
		,   P.TieneHijos
		,   P.Cuantos
		,   P.Estado
	FROM dbo.Persona P
	WHERE
	     (@IdPersona IS NULL OR IdPersona=@IdPersona)

END
GO
PRINT N'Update complete.';


GO
