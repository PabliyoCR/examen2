/*
Deployment script for Examen2

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Examen2"
:setvar DefaultFilePrefix "Examen2"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[CatalogoCanton]...';


GO
CREATE TABLE [dbo].[CatalogoCanton] (
    [IdCatalogoCanton]     INT          IDENTITY (1, 1) NOT NULL,
    [NombreCatalogoCanton] VARCHAR (50) NULL,
    [IdCatalogoProvincia]  INT          NOT NULL,
    CONSTRAINT [PK_Canton] PRIMARY KEY CLUSTERED ([IdCatalogoCanton] ASC)
)
WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating Table [dbo].[CatalogoDistrito]...';


GO
CREATE TABLE [dbo].[CatalogoDistrito] (
    [IdCatalogoDistrito]     INT          IDENTITY (1, 1) NOT NULL,
    [NombreCatalogoDistrito] VARCHAR (50) NULL,
    [IdCatalogoCanton]       INT          NOT NULL,
    CONSTRAINT [PK_Distrito] PRIMARY KEY CLUSTERED ([IdCatalogoDistrito] ASC)
)
WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating Table [dbo].[CatalogoProvincia]...';


GO
CREATE TABLE [dbo].[CatalogoProvincia] (
    [IdCatalogoProvincia]     INT          IDENTITY (1, 1) NOT NULL,
    [NombreCatalogoProvincia] VARCHAR (50) NULL,
    CONSTRAINT [PK_Provincia] PRIMARY KEY CLUSTERED ([IdCatalogoProvincia] ASC)
);


GO
PRINT N'Creating Table [dbo].[Direccion]...';


GO
CREATE TABLE [dbo].[Direccion] (
    [IdDireccion]         INT            IDENTITY (1, 1) NOT NULL,
    [IdPersona]           INT            NOT NULL,
    [IdCatalogoProvincia] INT            NOT NULL,
    [IdCatalogoCanton]    INT            NOT NULL,
    [IdCatalogoDistrito]  INT            NOT NULL,
    [Estado]              BIT            NOT NULL,
    [DireccionExacta]     VARCHAR (1000) NOT NULL,
    CONSTRAINT [PK_Direccion] PRIMARY KEY CLUSTERED ([IdDireccion] ASC)
)
WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating Table [dbo].[Persona]...';


GO
CREATE TABLE [dbo].[Persona] (
    [IdPersona]        INT            IDENTITY (1, 1) NOT NULL,
    [Cedula]           VARCHAR (250)  NOT NULL,
    [Nombre]           VARCHAR (250)  NOT NULL,
    [Primer_Apellido]  VARCHAR (250)  NOT NULL,
    [Segundo_Apellido] VARCHAR (250)  NOT NULL,
    [FechaNacimiento]  DATE           NOT NULL,
    [TieneHijos]       BIT            NOT NULL,
    [Cuantos]          VARCHAR (1000) NULL,
    [Estado]           BIT            NOT NULL,
    CONSTRAINT [PK_Persona] PRIMARY KEY CLUSTERED ([IdPersona] ASC)
)
WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating Index [dbo].[Persona].[IDX_Persona_Cedula]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IDX_Persona_Cedula]
    ON [dbo].[Persona]([Cedula] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating Default Constraint [dbo].[DF_Persona_Hijos]...';


GO
ALTER TABLE [dbo].[Persona]
    ADD CONSTRAINT [DF_Persona_Hijos] DEFAULT (0) FOR [TieneHijos];


GO
PRINT N'Creating Foreign Key [dbo].[FK_Canton_Provincia]...';


GO
ALTER TABLE [dbo].[CatalogoCanton] WITH NOCHECK
    ADD CONSTRAINT [FK_Canton_Provincia] FOREIGN KEY ([IdCatalogoProvincia]) REFERENCES [dbo].[CatalogoProvincia] ([IdCatalogoProvincia]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Distrito_Canton]...';


GO
ALTER TABLE [dbo].[CatalogoDistrito] WITH NOCHECK
    ADD CONSTRAINT [FK_Distrito_Canton] FOREIGN KEY ([IdCatalogoCanton]) REFERENCES [dbo].[CatalogoCanton] ([IdCatalogoCanton]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Direccion_Persona]...';


GO
ALTER TABLE [dbo].[Direccion] WITH NOCHECK
    ADD CONSTRAINT [FK_Direccion_Persona] FOREIGN KEY ([IdPersona]) REFERENCES [dbo].[Persona] ([IdPersona]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Direccion_Provincia]...';


GO
ALTER TABLE [dbo].[Direccion] WITH NOCHECK
    ADD CONSTRAINT [FK_Direccion_Provincia] FOREIGN KEY ([IdCatalogoProvincia]) REFERENCES [dbo].[CatalogoProvincia] ([IdCatalogoProvincia]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Direccion_Canton]...';


GO
ALTER TABLE [dbo].[Direccion] WITH NOCHECK
    ADD CONSTRAINT [Fk_Direccion_Canton] FOREIGN KEY ([IdCatalogoCanton]) REFERENCES [dbo].[CatalogoCanton] ([IdCatalogoCanton]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Direccion_Distrito]...';


GO
ALTER TABLE [dbo].[Direccion] WITH NOCHECK
    ADD CONSTRAINT [Fk_Direccion_Distrito] FOREIGN KEY ([IdCatalogoDistrito]) REFERENCES [dbo].[CatalogoDistrito] ([IdCatalogoDistrito]);


GO
PRINT N'Creating Procedure [dbo].[AgenciaObtener]...';


GO
CREATE PROCEDURE [dbo].AgenciaObtener
@IdDireccion INT=NULL

AS BEGIN
	SET NOCOUNT ON

	SELECT
			D.IdDireccion
		,   D.DireccionExacta
		,   D.Estado

		,   CP.IdCatalogoProvincia
		,	CP.NombreCatalogoProvincia

		,   CC.IdCatalogoCanton
		,	CC.NombreCatalogoCanton

		,   CD.IdCatalogoDistrito
		,	CD.NombreCatalogoDistrito

		,   P.IdPersona
		,	P.Nombre
	
				

	FROM dbo.Direccion D
	 INNER JOIN dbo.CatalogoProvincia CP
         ON D.IdCatalogoProvincia = CP.IdCatalogoProvincia
     INNER JOIN dbo.CatalogoCanton CC
         ON D.IdCatalogoCanton = CC.IdCatalogoCanton
	 INNER JOIN dbo.CatalogoDistrito CD
         ON D.IdCatalogoDistrito = CD.IdCatalogoDistrito
	 INNER JOIN dbo.Persona P
         ON D.IdPersona = P.IdPersona
	WHERE
	     (@IdDireccion IS NULL OR IdDireccion=@IdDireccion)

END
GO
PRINT N'Creating Procedure [dbo].[CatalogoCantonLista]...';


GO
CREATE PROCEDURE [dbo].[CatalogoCantonLista]
@IdCatalogoProvincia INT=null
AS
	BEGIN
		SET NOCOUNT ON
		SELECT 
		IdCatalogoCanton,
		NombreCatalogoCanton

		FROM	
			dbo.CatalogoCanton

	    WHERE
		    IdCatalogoProvincia=@IdCatalogoProvincia


	END
GO
PRINT N'Creating Procedure [dbo].[CatalogoDistritoLista]...';


GO
CREATE PROCEDURE [dbo].CatalogoDistritoLista
@IdCatalogoCanton INT=null
AS
	BEGIN
		SET NOCOUNT ON
		SELECT 
		IdCatalogoDistrito,
		NombreCatalogoDistrito

		FROM	
			dbo.CatalogoDistrito

	    WHERE
		    IdCatalogoCanton=@IdCatalogoCanton


	END
GO
PRINT N'Creating Procedure [dbo].[CatalogoProvinciaLista]...';


GO
CREATE PROCEDURE [dbo].[CatalogoProvinciaLista]
AS
	BEGIN
		SET NOCOUNT ON



		SELECT 
		IdCatalogoProvincia,
		NombreCatalogoProvincia

		FROM	
			dbo.CatalogoProvincia

	


	END
GO
PRINT N'Creating Procedure [dbo].[DireccionActualizar]...';


GO
CREATE PROCEDURE dbo.DireccionActualizar
    @IdPersona INT,
	@IdDireccion INT,
	@DireccionExacta VARCHAR(1000),
	@IdCatalogoProvincia INT,
	@IdCatalogoCanton INT,
	@IdCatalogoDistrito INT,
    @Estado BIT
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
	-- AQUI VA EL CODIGO
		
	UPDATE dbo.Direccion SET
	    IdPersona= @IdPersona,
	    DireccionExacta=@DireccionExacta,
		IdCatalogoProvincia=@IdCatalogoProvincia,
		IdCatalogoCanton=@IdCatalogoCanton,
		IdCatalogoDistrito=@IdCatalogoDistrito,
		Estado=@Estado

	WHERE IdDireccion=@IdDireccion

		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[DireccionEliminar]...';


GO
CREATE PROCEDURE [dbo].[DireccionEliminar]
@IdDireccion INT
  
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY

		
	DELETE FROM Dbo.Direccion WHERE IdDireccion=@IdDireccion


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[DireccionInsertar]...';


GO
CREATE PROCEDURE dbo.DireccionInsertar
    @IdPersona INT,
	@IdDireccion INT,
	@DireccionExacta VARCHAR(1000),
	@IdCatalogoProvincia INT,
	@IdCatalogoCanton INT,
	@IdCatalogoDistrito INT,
    @Estado BIT
	
	
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY

		
		INSERT INTO dbo.Direccion 
		(	       
	      IdPersona,
		  IdDireccion,
		  DireccionExacta,
		  IdCatalogoProvincia,
		  IdCatalogoCanton,
		  IdCatalogoDistrito,
		  Estado
		)
		VALUES
		(
		
	      @IdPersona,
		  @IdDireccion,
		  @DireccionExacta,
		  @IdCatalogoProvincia,
		  @IdCatalogoCanton,
		  @IdCatalogoDistrito,
		  @Estado
		)


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[PersonaEliminar]...';


GO
CREATE PROCEDURE dbo.PersonaEliminar
 @IdPersona INT
  
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
	-- AQUI VA EL CODIGO
		
	DELETE FROM dbo.Persona WHERE IdPersona=@IdPersona


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[PersonaInsertar]...';


GO
CREATE PROCEDURE dbo.PersonaInsertar
     
	@Cedula varchar(250)	,
	@Nombre varchar(250)	,
	@Primer_Apellido varchar(250),
	@Segundo_Apellido BIT,
	@FechaNacimiento DATE,
	@TieneHijos BIT ,
	@Cuantos VARCHAR(1000)= NULL,
	@Estado BIT 
	
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
	-- AQUI VA EL CODIGO
		
		INSERT INTO dbo.Persona 
		(
	      Cedula
	    , Nombre 
	    , Primer_Apellido
	    , Segundo_Apellido 
	    , FechaNacimiento 
		, TieneHijos
		, Cuantos
		, Estado
		)
		VALUES
		(
		 @Cedula
	    , @Nombre 
	    , @Primer_Apellido
	    , @Segundo_Apellido 
	    , @FechaNacimiento 
		, @TieneHijos
		, @Cuantos
		, @Estado
		)


		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Creating Procedure [dbo].[PersonaLista]...';


GO
CREATE PROCEDURE dbo.PersonaLista

AS
	BEGIN
		SET NOCOUNT ON



		SELECT 
		IdPersona,
		Nombre

		FROM	
			dbo.Persona

			WHERE
					Estado=1






	END
GO
PRINT N'Creating Procedure [dbo].[PersonaObtener]...';


GO
CREATE PROCEDURE [dbo].PersonaObtener
@IdPersona INT=NULL

AS BEGIN
	SET NOCOUNT ON

	SELECT
			P.IdPersona
		,   P.Cedula
		,   P.Nombre
		,   P.Primer_Apellido
		,   P.Segundo_Apellido
		,   P.FechaNacimiento
		,   P.TieneHijos
		,   P.Cuantos
		,   P.Estado
		

	FROM dbo.Persona P
	
	WHERE
	     (@IdPersona IS NULL OR IdPersona=@IdPersona)

END
GO
PRINT N'Creating Procedure [dbo].[VehiculoActualizar]...';


GO
CREATE PROCEDURE dbo.VehiculoActualizar
	@VehiculoId INT,
	@MarcaVehiculoId INT,
    @Matricula VARCHAR(250),
	@Color VARCHAR(250),
	@Modelo VARCHAR(250),
	@Estado BIT,
	@FechaModelo DATE,
	@TieneDefectos BIT ,
	@Defectos VARCHAR(1000)= NULL
AS BEGIN
SET NOCOUNT ON

	BEGIN TRANSACTION TRASA

	BEGIN TRY
	-- AQUI VA EL CODIGO
		
	UPDATE dbo.Vehiculo SET
	 MarcaVehiculoId=@MarcaVehiculoId,
	 Matricula=@Matricula,
	 Color=@Color,
	 Modelo=@Modelo,
	 Estado=@Estado,
	 FechaModelo=@FechaModelo,
	 TieneDefectos=@TieneDefectos,
	 Defectos=@Defectos

	WHERE VehiculoId=@VehiculoId

		COMMIT TRANSACTION TRASA
		
		SELECT 0 AS CodeError, '' AS MsgError



	END TRY

	BEGIN CATCH
		SELECT 
				ERROR_NUMBER() AS CodeError
			,	ERROR_MESSAGE() AS MsgError

			ROLLBACK TRANSACTION TRASA
	END CATCH


END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[CatalogoCanton] WITH CHECK CHECK CONSTRAINT [FK_Canton_Provincia];

ALTER TABLE [dbo].[CatalogoDistrito] WITH CHECK CHECK CONSTRAINT [FK_Distrito_Canton];

ALTER TABLE [dbo].[Direccion] WITH CHECK CHECK CONSTRAINT [FK_Direccion_Persona];

ALTER TABLE [dbo].[Direccion] WITH CHECK CHECK CONSTRAINT [FK_Direccion_Provincia];

ALTER TABLE [dbo].[Direccion] WITH CHECK CHECK CONSTRAINT [Fk_Direccion_Canton];

ALTER TABLE [dbo].[Direccion] WITH CHECK CHECK CONSTRAINT [Fk_Direccion_Distrito];


GO
PRINT N'Update complete.';


GO
